{"name":"Ember-blog-introduction","tagline":"A step-by-step guide to making a basic blog (made for my awesome team :) )","body":"# ember-blog-introduction\r\nA step-by-step guide to making a basic blog\r\n\r\n---\r\n\r\nSteps:\r\n\r\n1.  [Creating Posts Page](#creating-posts-page)\r\n2.  [Create Postid Page](#create-postid-page)\r\n3.  [Create a Posts/new Page](#create-a-postsnew-page)\r\n4.  [Handling Making New Posts](#handling-making-new-posts)\r\n\r\n---\r\n\r\n### Creating Posts Page\r\n---\r\n\r\n#### Create the project blog\r\n```\r\nember new test-blog; cd test-blog\r\n```\r\n\r\n#### Scaffold Post's model and route\r\n```\r\nember g resource posts\r\n```\r\ng is shorthand for generator. `resource` generates a model, route, tests, and template\r\n\r\n#### Run ember server\r\n```\r\nember server\r\n```\r\nember server creates a watch to update minification\r\n\r\n#### Create an Application Adapter\r\n```\r\nember g adapter application\r\n```\r\nin app/adapters/application\r\n```\r\nimport DS from 'ember-data';\r\nexport default DS.FixtureAdapter.extend();\r\n```\r\nWe are making a global adapter for the application.\r\nThe adapters tell ember how it is suppose to access model data. For now, lets set it to the FixtureAdapter\r\n\r\n#### Map the route to the model\r\nin routes/posts.js:\r\n```\r\nexport default Ember.Route.extend({\r\n  model: function() {\r\n    return this.store.find('post');\r\n  }\r\n});\r\n```\r\nBecause we are fetching with ember-data, the model has a relationship that depends on this.store.find()\r\n\r\n#### Define the Post Model\r\n```\r\nvar Posts = DS.Model.extend({\r\n  title: DS.attr('string'),\r\n  description: DS.attr('string')\r\n});\r\n\r\nexport default Posts;\r\n```\r\nWe are defining the schema for the posts model.\r\nWe could do this with the generator, but its nice to go this route\r\n\r\n#### Define Fixtures\r\n```\r\nPosts.reopenClass({\r\n  FIXTURES: [\r\n    {id: 1, title: 'hello world', 'description': 'world'},\r\n    {id: 2, title: 'hello world 2', 'description': 'hello world 2'}\r\n  ]\r\n});\r\n```\r\n\r\n#### Make the PostIndex page\r\n```\r\nember g template posts/index\r\n```\r\nin templates/posts/index\r\n```\r\n<ul>\r\n   {{#each model}}\r\n    <li>{{title}}</li>\r\n   {{/each}}\r\n</ul>\r\n```\r\n\r\n#### Update Template and Test\r\nin templates/posts:\r\n```\r\n<ul>\r\n     {{#each model}}\r\n          <li>{{title}}</li>\r\n     {{/each}}\r\n</ul>\r\n```\r\ngoto: http://0.0.0.0:4200/posts\r\n\r\n### Create Post/:id Page\r\n---\r\n\r\n#### Scaffold the Post page \r\n```\r\nember g resource post\r\n(donâ€™t override the model)\r\n```\r\n\r\n#### Update router with post\r\nin router.js\r\n```\r\nthis.resource(\"post\", { path: '/post/:post_id' });\r\n```\r\nThis adds the `/post/:id` path\r\n\r\n#### Update Post router\r\n routes/post\r\n```\r\nmodel: function(params) {\r\n  return this.store.find('post', params.post_id);\r\n  }\r\n```\r\n\r\n#### update link from posts to post\r\ntemplates/posts/index\r\n```\r\n  {{#each model}}\r\n    <li>\r\n      {{#link-to 'post' this}} {{title}} {{/link-to}}\r\n    </li>\r\n  {{/each}}\r\n```\r\n\r\n#### Add content to the post page\r\nin templates/post:\r\n```\r\n<h2>{{title}}</h2>\r\n<p>{{description}}</p>\r\n```\r\n\r\n\r\n### Create a Posts/New Page\r\n---\r\n\r\n#### Generate a controller and route\r\n```\r\nember g controller posts/new\r\nember g route posts/new\r\n```\r\n \r\n#### Add path to new page\r\nin templates/posts/index\r\n```\r\n{{#link-to 'posts.new'}}New Post{{/link-to}}\r\n```\r\n\r\n#### Update the content on the posts/new page\r\nin templates/posts/new\r\n```\r\n<h2>New Post</h2>\r\n{{input type=\"text\" placeholder=\"Title\" value=title}}\r\n{{textarea placeholder=\"content\" value=description}}\r\n<button {{action 'submit'}}>Submit</button>\r\n```\r\n\r\n#### Update the Controller to handle the submit action\r\nin controller/posts/new\r\n```\r\nexport default Ember.Controller.extend({\r\n       actions: {\r\n            submit: function(){\r\n                 var post = this.store.createRecord('post', {\r\n                      title: this.get('title'),\r\n                      description: this.get('description')\r\n                 });\r\n                 post.save();\r\n            }\r\n       }\r\n  });\r\n```\r\n\r\n### Handling making new posts\r\n---\r\n\r\n#### create posts mock \r\n```\r\nember g http-mock posts\r\n```\r\nCreates `/server/mocks/posts`\r\n\r\n#### Update our adapater to RESTADAPTER\r\nin adapters/application\r\n```\r\nexport default DS.RESTAdapter.extend({\r\n     namespace: 'api'\r\n});\r\n```\r\n\r\n#### Update mocks to have an in memory store\r\nin server/mocks/posts:\r\n  copy/paste:\r\n    https://gist.github.com/TheIronDeveloper/69de8b6273586f155d2b\r\n    \r\n#### Update the Controller to redirect on success\r\nin controller/posts: \r\n```\r\nexport default Ember.Controller.extend({\r\n  actions: {\r\n    submit: function(){\r\n      var post = this.store.createRecord('post', {\r\n          title: this.get('title'),\r\n          description: this.get('description')\r\n        }),\r\n        self = this;\r\n      post.save().then(function(){\r\n        self.transitionToRoute('posts');\r\n      });\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n### Future ?\r\nAdd comments?\r\nadd an edit page?\r\ndiscussion?\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}